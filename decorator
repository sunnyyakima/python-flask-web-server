# illustrate what decorator:
# key: 1: func can be passed to another func
#      2: func can be returned from another func


def new_decorator(func):
    # a func as argument
    def wrap_func():
        print("some code before func")
        func()
        print("code here after func")
    
    return wrap_func

# @new_decorator
def func_needs_decorator():
    print("   Please decorate me!")

func_needs_decorator = new_decorator(func_needs_decorator)
func_needs_decorator()
